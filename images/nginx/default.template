server {
    listen 80;
    listen [::]:80;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/certificate.key;

    # HTTP auth basic module
    auth_basic "${NGINX_HTTP_AUTH_BASIC}";
    auth_basic_user_file /etc/nginx/htpasswd;

    # Log to Docker STDOUT and STDERR
    access_log /dev/stdout;
    error_log /dev/stderr;

    # Resource limits
    client_max_body_size 1M;

    # Path to public PHP files
    root /application/public/;
    index ${NGINX_DEFAULT_PHP_FRONT_CONTROLLER}.php;

    # Remove default front controller from URL
    if ($request_uri ~* "^(.*/)${NGINX_DEFAULT_PHP_FRONT_CONTROLLER}\.php(/?)(.*)$") {
        return 301 $1$3;
    }

    # Use default front controller if file not exists
    location / {
        try_files $uri /${NGINX_DEFAULT_PHP_FRONT_CONTROLLER}.php$is_args$args;
    }

    # Process front controllers requests with PHP-FPM
    location ~ ^/(${NGINX_AVAILABLE_PHP_FRONT_CONTROLLERS})\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_index ${NGINX_DEFAULT_PHP_FRONT_CONTROLLER}.php;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param HTTPS $https;
    }

    # Return 404 for all other PHP files not matching the front controllers
    location ~ \.php$ {
        return 404;
    }

    # SSL config from https://cipherli.st/
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
}
